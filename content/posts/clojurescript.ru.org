#+title: –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞ ClojureScript + FigWheel Main + Reagent
#+options: \n:t
#+toc: t
#+DRAFT: false
#+AUTHOR: –û–ª–µ–≥ –í–µ—â–∏–Ω
#+GENRES: Development
#+GENRES: Guide
#+TAGS: lisp
#+TAGS: clojurescript
#+WEIGHT: 10
* –í–≤–µ–¥–µ–Ω–∏–µ
#+begin_quote
–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Å—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –±–µ–≥ —Å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º–∏: —Å–ª–æ–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –º–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã–π –∫–æ–¥, –¥–æ–ª–≥–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –≠—Ç–∏ –±–æ–ª–∏ –∑–∞–º–µ–¥–ª—è—é—Ç –∏—Ç–µ—Ä–∞—Ü–∏–∏, –æ—Ç–≤–ª–µ–∫–∞—é—Ç –æ—Ç —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –±–æ—Ä—å–±—É —Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, –∞ –Ω–µ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á. –ù–æ —á—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ø–æ—Å–æ–± —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —ç—Ç–æ—Ç —Ü–∏–∫–ª –¥–æ –º–∏–Ω–∏–º—É–º–∞?
#+end_quote
[[file:/clojurescript.png]]
** –ö–∞–∫ ClojureScript, Figwheel Main –∏ Reagent —Ä–µ—à–∞—é—Ç –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
- –°–ª–æ–∂–Ω–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ JavaScript-—Å—Ç—ç–∫–∏ —Ç—Ä–µ–±—É—é—Ç —Ç–æ–Ω–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π. ClojureScript —Å tools.deps –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Äî —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ.
- –ú–µ–¥–ª–µ–Ω–Ω—ã–π feedback loop: –ñ–¥–∞—Ç—å, –ø–æ–∫–∞ —Å–æ–±–µ—Ä–µ—Ç—Å—è –ø—Ä–æ–µ–∫—Ç –∏ –æ–±–Ω–æ–≤–∏—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä ‚Äî –ø–æ—Ç–µ—Ä—è –≤—Ä–µ–º–µ–Ω–∏. Figwheel Main –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, —Å–æ—Ö—Ä–∞–Ω—è—è –¥–∞–∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
- –ú–Ω–æ–≥–æ—Å–ª–æ–≤–Ω—ã–π UI-–∫–æ–¥: React —Å JSX –∏ –∫–ª–∞—Å—Å–∞–º–∏ —á–∞—Å—Ç–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –ª–∞–±–∏—Ä–∏–Ω—Ç —à–∞–±–ª–æ–Ω–æ–≤. Reagent –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø–∏—Å—ã–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É—è –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Clojure.
** –ü–æ—á–µ–º—É —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
- [[https://clojurescript.org/about/rationale][ClojureScript]] ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ ¬´Clojure –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞¬ª. –≠—Ç–æ —è–∑—ã–∫, –≥–¥–µ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞–¥–∏–≥–º–∞ —Å–Ω–∏–∂–∞—é—Ç —Ä–∏—Å–∫ –æ—à–∏–±–æ–∫, –∞ –º–∞–∫—Ä–æ—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —É–±—Ä–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç Clojure (–∑–∞–ø—É—Å–∫–∞–µ–º–æ–≥–æ –Ω–∞ JVM), –æ–Ω –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ —á–∏—Å—Ç—ã–π JavaScript, —Å–æ—Ö—Ä–∞–Ω—è—è –≤—Å—é –º–æ—â—å —Ä–æ–¥–∏—Ç–µ–ª—è.
- [[https://github.com/bhauman/figwheel-main/tree/master][Figwheel Main]] ‚Äî –Ω–µ –æ—á–µ—Ä–µ–¥–Ω–æ–π ¬´live reload¬ª. –≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ä–µ–¥–∞, –≥–¥–µ –∫–æ–¥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –±–µ–∑ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏. –í—ã –º–µ–Ω—è–µ—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é ‚Äî –±—Ä–∞—É–∑–µ—Ä –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–µ —Ç–µ—Ä—è—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
- [[https://github.com/reagent-project/reagent][Reagent]] ‚Äî —ç—Ç–æ React –±–µ–∑ –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤. –í–º–µ—Å—Ç–æ JSX ‚Äî –≤–µ–∫—Ç–æ—Ä—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–µ DOM. –í–º–µ—Å—Ç–æ —Å–ª–æ–∂–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º ‚Äî –∞—Ç–æ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—é—Ç —Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.
#+begin_quote
–≠—Ç–æ—Ç —Å—Ç–µ–∫ ‚Äî –Ω–µ –º–∞–≥–∏—è, –∞ –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–≤—è—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä. –ó–¥–µ—Å—å –≤—ã –ø–∏—à–µ—Ç–µ –º–µ–Ω—å—à–µ –∫–æ–¥–∞, –±—ã—Å—Ç—Ä–µ–µ –≤–∏–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Ç—Ä–∞—Ç–∏—Ç–µ —Å–∏–ª—ã –Ω–∞ –ª–æ–≥–∏–∫—É, –∞ –Ω–µ –Ω–∞ –±–æ—Ä—å–±—É —Å —Å–∏—Å—Ç–µ–º–æ–π. –ï—Å–ª–∏ –≤—ã —É—Å—Ç–∞–ª–∏ –æ—Ç —Ä—É—Ç–∏–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –ø–æ–¥—Ö–æ–¥—É, –≥–¥–µ –ø—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ‚Äî –¥–∞–≤–∞–π—Ç–µ —Å–æ–±–µ—Ä–µ–º –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —ç—Ç–æ –ø–æ–∫–∞–∂–µ—Ç –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ.
#+end_quote
* –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫
#+begin_src bash
brew install clojure/tools/clojure
brew install rlwrap
#+end_src
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤
#+begin_src bash
clojure -Ttools install-latest :lib com.github.seancorfield/clj-new :as clj-new
#+end_src
* –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
–Ø —Å–æ–∑–¥–∞—é –ø—Ä–æ–µ–∫—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ~veschin/cljs-test~ –Ω–∞—Ö–æ–¥—è—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ~/tmp~
#+begin_src bash :dir /tmp :results output
# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç, –µ—Å–ª–∏ –æ–Ω –≤–¥—Ä—É–≥ –±—ã–ª
rm -rf cljs-test
# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ —à–∞–±–ª–æ–Ω—É
clj -Tclj-new create :template figwheel-main :name veschin/cljs-test :args '["--reagent"]'
#+end_src

#+RESULTS:
#+begin_src fish
Generating fresh figwheel-main project.
  To get started:
  -->  Change into the 'cljs-test' directory
  -->  Start build with 'clojure -M:fig:build'
#+end_src
* –û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞
** –ü–æ—Å–º–æ—Ç—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
#+begin_src fish :results code
ls /tmp/cljs-test
#+end_src

#+RESULTS:
#+begin_src fish
.gitignore
README.md
# –ö–æ–Ω—Ñ–∏–≥ –ø—Ä–æ–µ–∫—Ç–∞
deps.edn
dev.cljs.edn
figwheel-main.edn
resources
# –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∫–æ–¥–æ–º
src
# –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –±–∏–ª–¥–æ–º
target
# –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ç–µ—Å—Ç–∞–º–∏
test
test.cljs.edn
#+end_src

** –ü–æ—Å–º–æ—Ç—Ä–∏–º –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞,
#+begin_src fish :results code :wrap src clojure
cat /tmp/cljs-test/deps.edn
#+end_src
–£–≤–∏–¥–∏–º —Ç–∞–º –ø–∞—Ä—É –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∞–º–æ–≥–æ —è–∑—ã–∫–∞
- ~org.clojure/clojure {:mvn/version "1.12.0"}~
- ~org.clojure/clojurescript {:mvn/version "1.11.132"}~
–î–ª—è —Ä–∞–±–æ—Ç—ã ~Reagent~
- ~cljsjs/react {:mvn/version "18.3.1-1"}~
- ~cljsjs/react-dom {:mvn/version "18.3.1-1"}~
- ~reagent/reagent {:mvn/version "1.2.0"}~
–¢–∞–∫ –∂–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –µ—Å—Ç—å –∞–ª–∏–∞—Å—ã
Alias - –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Ñ–ª–∞–≥ ~clj -M/-T/-A:alias-name~
–í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∞–ª–∏–∞—Å—ã
- ~:fig~ - —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è ~dev~ —Ä–µ–∂–∏–º–∞
- ~:build~ - —Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ ~dev~ —Ä–µ–∂–∏–º–µ
- ~:clean~ - —á–∏—Å—Ç–∏—Ç —Ç–∞—Ä–≥–µ—Ç –æ—Ç —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
- ~:min~ - –¥–µ–ª–∞–µ—Ç —Å–±–æ—Ä–∫—É advanced —É—Ä–æ–≤–Ω—è
- ~:test~ - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç—ã
#+RESULTS:
#+begin_src clojure
{:deps {org.clojure/clojure {:mvn/version "1.12.0"}
        org.clojure/clojurescript {:mvn/version "1.11.132"}
        org.clojure/data.json {:mvn/version "2.5.1"}
        cljsjs/react {:mvn/version "18.3.1-1"}
        cljsjs/react-dom {:mvn/version "18.3.1-1"}
        reagent/reagent {:mvn/version "1.2.0" }}
 :paths ["src" "resources"]
 :aliases {:fig {:extra-deps
                 {com.bhauman/rebel-readline-cljs {:mvn/version "0.1.4"}
                  com.bhauman/figwheel-main {:mvn/version "0.2.20"}
                  org.slf4j/slf4j-nop {:mvn/version "2.0.16"}}
                 :extra-paths ["target" "test"]}
           :build {:main-opts ["-m" "figwheel.main" "-b" "dev" "-r"]}
           :clean {:main-opts ["-m" "figwheel.main" "--clean" "dev"]}
           :min   {:main-opts ["-m" "figwheel.main" "-O" "advanced" "-bo" "dev"]}
           :test  {:main-opts ["-m" "figwheel.main" "-co" "test.cljs.edn" "-m" "veschin.test-runner"]}}}
#+end_src
* –°—Ç–∞—Ä—Ç –ø—Ä–æ–µ–∫—Ç–∞
–ó–∞–ø—É—Å—Ç–∏–º –Ω–∞—à –ø—Ä–æ–µ–∫—Ç
#+begin_src fish :dir /tmp/cljs-test :results output
clojure -M:fig:build
#+end_src
–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º, —á—Ç–æ-—Ç–æ —Ç–∞–∫–æ–µ
#+RESULTS:
#+begin_src fish
[Figwheel] Validating figwheel-main.edn
[Figwheel] [32mfigwheel-main.edn is valid \(„ÉÑ)/[0m
[Figwheel] Compiling build dev to "target/public/cljs-out/dev-main.js"
[Figwheel] [32mSuccessfully compiled build dev to "target/public/cljs-out/dev-main.js" in 0.722 seconds.[0m
[Figwheel] Outputting main file: target/public/cljs-out/dev-main-auto-testing.js
[Figwheel] Watching paths: ("test" "src") to compile build - dev
[Figwheel] Starting Server at http://localhost:9500
[Figwheel] Starting REPL
[1mPrompt will show when REPL connects to evaluation environment (i.e. a REPL hosting webpage)[0m
Figwheel Main Controls:
          (figwheel.main/stop-builds id ...)  ;; stops Figwheel autobuilder for ids
          (figwheel.main/start-builds id ...) ;; starts autobuilder focused on ids
          (figwheel.main/reset)               ;; stops, cleans, reloads config, and starts autobuilder
          (figwheel.main/build-once id ...)   ;; builds source one time
          (figwheel.main/clean id ...)        ;; deletes compiled cljs target files
          (figwheel.main/status)              ;; displays current state of system
Figwheel REPL Controls:
          (figwheel.repl/conns)               ;; displays the current connections
          (figwheel.repl/focus session-name)  ;; choose which session name to focus on
In the cljs.user ns, controls can be called without ns ie. (conns) instead of (figwheel.repl/conns)
    Docs: (doc function-name-here)
    Exit: :cljs/quit
 Results: Stored in vars *1, *2, *3, *e holds last exception object
Unable to detect a system Terminal, you must not launch the Rebel readline
from an intermediate process.
If you are using `lein` you may need to use `lein trampoline`.
Opening URL http://localhost:9500
ClojureScript 1.11.132
cljs.user=>
#+end_src

–•–æ—Ä–æ—à–æ —á—Ç–æ –º—ã –º–æ–∂–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ –∏–∑ —à–µ–ª–ª–∞, –Ω–æ –ª—É—á—à–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ –≤–∞—à–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
** Emacs
–í–∞–º –Ω—É–∂–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π ~clojure-mode~

—Å–æ–∑–¥–∞–µ–º –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–µ–∫—Ç–∞ ~.dir-locals.el~ —Ñ–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–∑–æ–≤–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞. –ª—É—á—à–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä, —á—Ç–æ–±—ã –æ–Ω –ø–æ–¥—Ç—è–Ω—É–ª —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
#+begin_src fish :results none
echo '((clojurescript-mode (cider-clojure-cli-aliases . ":fig:dev")))' > /tmp/cljs-test/.dir-locals.el
#+end_src
1. –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É ~M-x cider-jack-in-cljs~
2. –≤—ã–±–∏—Ä–∞–µ–º ~figwheel-main~
3. –∫–æ–≥–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –º—ã —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ —Ä–µ–ø–ª—É –∏ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥
4. –ø—Ä–æ —Ç–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥, –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å [[https://docs.cider.mx/cider/usage/code_evaluation.html#terminology][–∑–¥–µ—Å—å]]
** VScode
* Reagent
–†–∞–∑–±–µ—Ä–µ–º—Å—è —Å –≥–ª–∞–≤–Ω—ã–º –≤–æ–ø—Ä–æ—Å–æ–º –Ω–æ–≤–∏—á–∫–∞, –ø–æ—á–µ–º—É –∫–æ–¥ —Ä–µ–∞–≥–µ–Ω—Ç–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫.
–≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ
#+begin_src jsx
function HelloWorld() {
  return (
    <div>
      <h1>{appState.text}</h1>
      <h3>Edit this in src/components/HelloWorld.js and watch it change!</h3>
    </div>
  );
}
#+end_src
#+begin_src clojure
(defn hello-world []
  [:div
   [:h1 (:text @app-state)]
   [:h3 "Edit this in src/veschin/cljs_test.cljs and watch it change!"]])
#+end_src

–†–∞–∑–Ω–∏—Ü–∞ –≤ —Ç–æ–º, —á—Ç–æ –≤ —Ä–µ–∞–≥–µ–Ω—Ç–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –≤–µ–∫—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–∞–Ω–Ω—ã—Ö, –∞ –∑–Ω–∞—á–∏—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å –Ω–∏–º–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏
#+begin_src clojure :results code
(vec (cons :div (map (fn [i] [:div i]) (range 10))))
#+end_src
–í–æ—Ç –º—ã —Å–æ–∑–¥–∞–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑ 10 ~<div>~ –±–ª–æ–∫–æ–≤
#+RESULTS:
#+begin_src clojure
[:div
 [:div 0]
 [:div 1]
 [:div 2]
 [:div 3]
 [:div 4]
 [:div 5]
 [:div 6]
 [:div 7]
 [:div 8]
 [:div 9]]
#+end_src
* –ü—Ä–æ—Å—Ç–æ–π counter
–í–æ—Ç –∫–æ–¥ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞, –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—à–µ–≥–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
#+begin_src clojure
(ns ^:figwheel-hooks veschin.cljs-test
  (:require
   [goog.dom :as gdom]
   [reagent.core :as reagent :refer [atom]]
   [reagent.dom :as rdom]))

(defonce app-state (atom {:count 0}))

;; –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—á–µ—Ç—á–∏–∫–∞
(defn hello-world []
  [:div
   [:h1 "Count: " (:count @app-state)]
   [:button
    {:on-click #(swap! app-state update :count inc)}
    "Click me!"]])

;; –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–Ω—Ç–∞–∂–∞
;; –†–µ–Ω–¥–µ—Ä–∏–º –≤ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞—à –∫–æ–º–ø–æ–Ω–µ–Ω—Ç hello-world
(defn mount [el]
  (rdom/render [hello-world] el))

(defn mount-app-element []
  (when-let [el (gdom/getElement "app")]
    (mount el)))

;; –ú–æ–Ω—Ç–∏—Ä—É–µ–º –Ω–∞—à –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
(mount-app-element)

;; –•—É–∫ –¥–ª—è —Ä–µ–ª–æ–∞–¥–∞
(defn ^:after-load on-reload []
  (mount-app-element)
#+end_src
